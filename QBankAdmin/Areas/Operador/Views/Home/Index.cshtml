@model QBankAdmin.Areas.Operador.Models.IndexViewModel
@{

    Layout = "OperadorLayout";
}


<section class="container__operador">

    <p>Caja 14</p>

    <h3>Turnos en espera</h3>
  <div class="container__operador-turnos">
        @foreach (var item in Model.Turnos)
        {
            <div class="container__operador-turnos-item">
                <p>Turno: @item.CodigoTurno</p>
                <p>@item.Estado</p>
            </div>

        }
  </div>

    <div class="container__operador-turnos-actual">
        <h3>Turno actual</h3>
        <p>Turno: </p>
    </div>

    <button id="btnNext">
        Siguiente turno
    </button>
</section>

<script>
    const urlLocal = "https://localhost:5001/turno"; 
    const url = "https://qbank.websitos256.com/turno";
    const btnNext = document.getElementById("btnNext");
    const $turnoActual = document.querySelector(".container__operador-turnos-actual p");
    const turnos = document.querySelectorAll(".container__operador-turnos-item");

    const connection = new signalR.HubConnectionBuilder()
        .withUrl(url, {
            skipNegotiation: true,
            transport: signalR.HttpTransportType.WebSockets,
        })
        .configureLogging(signalR.LogLevel.Information)
        .build();

    async function start() {
        try {
            await connection.start();
            console.log("SignalR Connected.");
        } catch (err) {
            console.log(err);
            setTimeout(start, 5000);
        }
    };

    connection.onclose(async () => {
        await start();
    });

    connection.on("AddToQueue", (turno) => {
        console.log(turno);
    });

    connection.on("SetCurrentTurn", (turno, cajaId) => {
        console.log("turno", turno, "CajaId", cajaId)
        $turnoActual.textContent = `Turno: ${turno}`;

        turnos.forEach((item) => {
            if (item.textContent.includes(turno)) {
                item.remove();
            }
        });
    });

    btnNext.addEventListener("click", async () => {
        // Aqui el lugar de pasar el 1, deberia de ser el id de la caja proporcionadas 
        // por las claims 
        await connection.invoke("SetCurrentTurn", (1));
    });



    // Start the connection.
    start();
</script>