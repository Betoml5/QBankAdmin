@model QBankAdmin.Models.ViewModels.IndexViewModel
@{

    Layout = "MainLayout";
}


<div class="container">
    @* <img src="~/images/queue-draw.svg" alt="Cola" /> *@


    <div id="currentTurno" class="current-turno">
    </div>

    <div class="container__turnos">
        @foreach (var item in Model.Turnos)
        {
            <div class="container__turnos-item">
                <p>Turno: @item.CodigoTurno</p>
            </div>
        }
    </div>

 
</div>



<script>

    const currentTurno = document.querySelector("#currentTurno");
    const url = "https://qbank.websitos256.com/turno";
    const urlLocal = "https://localhost:5001/turno";
    const turnos = document.querySelectorAll(".container__turnos-item");
    const connection = new signalR.HubConnectionBuilder()
        .withUrl(url, {
            skipNegotiation: true,
            transport: signalR.HttpTransportType.WebSockets,
        })
        .configureLogging(signalR.LogLevel.Information)
        .build();

    async function start() {
        try {
            await connection.start();
            console.log("SignalR Connected.");
        } catch (err) {
            console.log(err);
            setTimeout(start, 5000);
        }
    };

    connection.onclose(async () => {
        await start();
    });


    connection.on("AddToQueue", (turno) => {
        const turnosContainer = document.querySelector(".container__turnos");

        const $div = document.createElement("div");
        $div.classList.add("container__turnos-item");
        const p = document.createElement("p");
        p.textContent = `Turno: ${turno.codigoTurno}`;
        $div.appendChild(p);

        turnosContainer.appendChild($div);
        


    });


    connection.on("SetCurrentTurn", (turno, caja) => {
        const turnos = document.querySelectorAll(".container__turnos-item");

        const p = document.createElement("p");
        currentTurno.innerHTML = "";
        p.textContent = `Cliente con turno ${turno} favor de pasar a caja ${caja}`;
        currentTurno.appendChild(p);

        turnos.forEach((item) => {
            if (item.textContent.includes(turno)) {
                item.remove();
            }
        });


    });

    // Start the connection.
    start();
</script>